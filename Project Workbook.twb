<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <aliases>
          <alias key='10' value='Top 10' />
          <alias key='15' value='Top 15' />
          <alias key='20' value='Top 20' />
        </aliases>
        <members>
          <member alias='Top 10' value='10' />
          <member alias='Top 15' value='15' />
          <member alias='Top 20' value='20' />
        </members>
      </column>
    </datasource>
    <datasource caption='FAA Wildlife Strikes (faa_data_subset)' inline='true' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='faa_data_subset' name='excel-direct.1u4qvcl0wz2hjf1et93n913bp02e'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/got1p/Downloads/faa_data_subset.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u4qvcl0wz2hjf1et93n913bp02e' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:1' header='yes' lost='0' outcome='1' processed='67045'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u4qvcl0wz2hjf1et93n913bp02e' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:1' header='yes' lost='0' outcome='1' processed='67045'>
            <column datatype='string' name='Airport: Code' ordinal='0' />
            <column datatype='string' name='Airport: Name' ordinal='1' />
            <column datatype='string' name='Origin State' ordinal='2' />
            <column datatype='string' name='Origin State Code' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Aircraft: Type' ordinal='5' />
            <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
            <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
            <column datatype='string' name='When: Time of day' ordinal='8' />
            <column datatype='string' name='When: Phase of flight' ordinal='9' />
            <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
            <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
            <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
            <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
            <column datatype='integer' name='Cost: Total $' ordinal='14' />
            <column datatype='real' name='Days' ordinal='15' />
            <column datatype='integer' name='Feet above ground' ordinal='16' />
            <column datatype='real' name='Miles from airport' ordinal='17' />
            <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
            <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
            <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
            <column datatype='string' name='Wildlife: Species' ordinal='21' />
            <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
            <column datatype='integer' name='Number of Strikes' ordinal='23' />
            <column datatype='integer' name='Record ID' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y10001:no:A1:Y10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>67045</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport: Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Airport: Name]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Airport: Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin State Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Origin State Code]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Origin State Code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Aircraft: Type]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft: Number of engines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aircraft: Number of engines]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Aircraft: Number of engines</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Collision Date and Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Collision Date and Time]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Collision Date and Time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Time of day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Time of day]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Time of day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>When: Phase of flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[When: Phase of flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>When: Phase of flight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Amount of damage (detailed)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Amount of damage (detailed)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Amount of damage (detailed)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Impact to flight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Impact to flight]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Impact to flight</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Effect: Indicated Damage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Effect: Indicated Damage]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Effect: Indicated Damage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Aircraft time out of service (hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost: Aircraft time out of service (hours)]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Aircraft time out of service (hours)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost: Total $</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost: Total $]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Cost: Total $</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Days]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Days</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feet above ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feet above ground]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Feet above ground</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miles from airport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miles from airport]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Miles from airport</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Animal Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Animal Category]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Animal Category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Order</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Order]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Order</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species Group]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species Group</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wildlife: Species ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Wildlife: Species ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Wildlife: Species ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Strikes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Strikes]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Number of Strikes</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Record ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Record ID]</local-name>
            <parent-name>[FAA Wildlife Strikes]</parent-name>
            <remote-alias>Record ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
      <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Record ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
      <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
      <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='FAA Wildlife Strikes' datatype='table' name='[__tableau_internal_object_id__].[FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
      <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
      <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
      <group caption='Action (When: Time of day)' hidden='true' name='[Action (When: Time of day)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[When: Time of day]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (When: Phase of flight,Wildlife: Animal Category)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:When: Phase of flight:nk]' />
          <groupfilter function='level-members' level='[none:Wildlife: Animal Category:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Damage'>
          <field>[Effect: Amount of damage (detailed)]</field>
          <field>[Effect: Indicated Damage]</field>
        </drill-path>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[Origin State]</field>
          <field>[Origin State Code]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Wildlife: Animal Category:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;Terrestrial Mammals&quot;</bucket>
            </map>
            <map to='#439350'>
              <bucket>&quot;Reptiles&quot;</bucket>
            </map>
            <map to='#8eb858'>
              <bucket>&quot;Birds&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Bats&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:When: Time of day:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Night&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Dusk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dawn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>9</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>8</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{30b018b0-ca35-4d58-b5d6-532e12cc73b1}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='FAA Wildlife Strikes' id='FAA Wildlife Strikes_4125686EFFC14B66A73D0F909C125E0F'>
            <properties context=''>
              <relation connection='excel-direct.1u4qvcl0wz2hjf1et93n913bp02e' name='FAA Wildlife Strikes' table='[&apos;FAA Wildlife Strikes$&apos;]' type='table'>
                <columns gridOrigin='A1:Y10001:no:A1:Y10001:1' header='yes' lost='0' outcome='1' processed='67045'>
                  <column datatype='string' name='Airport: Code' ordinal='0' />
                  <column datatype='string' name='Airport: Name' ordinal='1' />
                  <column datatype='string' name='Origin State' ordinal='2' />
                  <column datatype='string' name='Origin State Code' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Aircraft: Type' ordinal='5' />
                  <column datatype='integer' name='Aircraft: Number of engines' ordinal='6' />
                  <column datatype='datetime' name='Collision Date and Time' ordinal='7' />
                  <column datatype='string' name='When: Time of day' ordinal='8' />
                  <column datatype='string' name='When: Phase of flight' ordinal='9' />
                  <column datatype='string' name='Effect: Amount of damage (detailed)' ordinal='10' />
                  <column datatype='string' name='Effect: Impact to flight' ordinal='11' />
                  <column datatype='string' name='Effect: Indicated Damage' ordinal='12' />
                  <column datatype='real' name='Cost: Aircraft time out of service (hours)' ordinal='13' />
                  <column datatype='integer' name='Cost: Total $' ordinal='14' />
                  <column datatype='real' name='Days' ordinal='15' />
                  <column datatype='integer' name='Feet above ground' ordinal='16' />
                  <column datatype='real' name='Miles from airport' ordinal='17' />
                  <column datatype='string' name='Wildlife: Animal Category' ordinal='18' />
                  <column datatype='string' name='Wildlife: Species Order' ordinal='19' />
                  <column datatype='string' name='Wildlife: Species Group' ordinal='20' />
                  <column datatype='string' name='Wildlife: Species' ordinal='21' />
                  <column datatype='string' name='Wildlife: Species ID' ordinal='22' />
                  <column datatype='integer' name='Number of Strikes' ordinal='23' />
                  <column datatype='integer' name='Record ID' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
      </datasources>
      <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
        <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
        <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]'>
        <groupfilter function='level-members' level='[yr:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_10516A40DD304BD48D14F8639EB64473]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Strikes Analysis' type='sheet' worksheet='Strikes By Time Of Day' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Strikes Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airports With Most Wildlife Strikes'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]'>
            <groupfilter function='level-members' level='[When: Time of day]' user:ui-action-filter='[Action1_10516A40DD304BD48D14F8639EB64473]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]' direction='DESC' measure-to-sort-by='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk] / [federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk])</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]</cols>
      </table>
      <simple-id uuid='{ADDC8170-5C03-4C50-9568-F103E8E7764D}' />
    </worksheet>
    <worksheet name='Map - Clusters'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{30b018b0-ca35-4d58-b5d6-532e12cc73b1}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State Code]' derivation='None' name='[none:Origin State Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>8</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Longitude (generated)]' field-type='quantitative' max='-1209831.9176705126' min='-14755604.968882898' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Latitude (generated)]' field-type='quantitative' max='7911240.171016762' min='250187.22279784793' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:AdhocCluster:1:ok]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State Code:nk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <geometry column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Latitude (generated)]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BC2DE41D-B763-491A-808E-53227BCFF191}' />
    </worksheet>
    <worksheet name='Map Of States With Most Strikes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='24'>Map Showing States With Number Of Strikes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State Code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State Code]' derivation='None' name='[none:Origin State Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Longitude (generated)]' field-type='quantitative' max='-3275794.3847813997' min='-16813922.709934052' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Latitude (generated)]' field-type='quantitative' max='8295358.9893636052' min='1717614.3518576918' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State Code:nk]' />
              <geometry column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Latitude (generated)]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4E2C47C6-1612-4319-B333-54638595EC60}' />
    </worksheet>
    <worksheet name='Predicting Total Strikes Per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column-instance column='[Number of Strikes]' derivation='Sum' forecast-column-base='[sum:Number of Strikes:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Quarter-Trunc' name='[tqr:Collision Date and Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[fVal:sum:Number of Strikes:qk]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[tqr:Collision Date and Time:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{CAC891C4-20E8-4BB7-8DCB-7C9A4807E2C1}' />
    </worksheet>
    <worksheet name='Strikes By Time Of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Time of day]' derivation='None' name='[none:When: Time of day:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Time of day:nk]' />
              <groupfilter function='member' level='[none:When: Time of day:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]' />
              <wedge-size column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <size column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{88300375-2259-43C6-BF1A-6FF46FD6F1C4}' />
    </worksheet>
    <worksheet name='Total Cost Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Cost: Total $]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost: Total $]' derivation='Sum' name='[sum:Cost: Total $:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Cost: Total $:qk]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</cols>
      </table>
      <simple-id uuid='{1DBA6EB8-0D9A-4C84-A527-B7A9F33BC408}' />
    </worksheet>
    <worksheet name='Total Damage Per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Effect: Indicated Damage]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Effect: Indicated Damage]' derivation='None' name='[none:Effect: Indicated Damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Indicated Damage:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]'>
            <groupfilter function='level-members' level='[none:Origin State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk] / ([federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk] / [federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Indicated Damage:nk]))</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]</cols>
      </table>
      <simple-id uuid='{E800B72B-3991-4284-B9A6-2BB9469CFAD3}' />
    </worksheet>
    <worksheet name='Wildlife Strikes By Year Per Animal'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Quarter-Trunc' name='[tqr:Collision Date and Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]'>
            <groupfilter function='level-members' level='[When: Time of day]' user:ui-action-filter='[Action1_10516A40DD304BD48D14F8639EB64473]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <text column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[tqr:Collision Date and Time:qk]</cols>
      </table>
      <simple-id uuid='{588C471C-59E6-450C-A4D1-096B6B362C3A}' />
    </worksheet>
    <worksheet name='Wildlife Strikes by Phase Of Flight'>
      <table>
        <view>
          <datasources>
            <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <aliases>
                <alias key='10' value='Top 10' />
                <alias key='15' value='Top 15' />
                <alias key='20' value='Top 20' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
            <column datatype='string' name='[Airport: Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Strikes]' role='measure' type='quantitative' />
            <column datatype='string' name='[When: Phase of flight]' role='dimension' type='nominal' />
            <column datatype='string' name='[When: Time of day]' role='dimension' type='nominal' />
            <column datatype='string' name='[Wildlife: Animal Category]' role='dimension' type='nominal' />
            <column-instance column='[Airport: Name]' derivation='None' name='[none:Airport: Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[When: Phase of flight]' derivation='None' name='[none:When: Phase of flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wildlife: Animal Category]' derivation='None' name='[none:Wildlife: Animal Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Strikes]' derivation='Sum' name='[sum:Number of Strikes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]'>
            <groupfilter function='level-members' level='[When: Time of day]' user:ui-action-filter='[Action1_10516A40DD304BD48D14F8639EB64473]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Exclusions (When: Phase of flight,Wildlife: Animal Category)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:When: Phase of flight:nk]' />
                <groupfilter function='level-members' level='[none:Wildlife: Animal Category:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:When: Phase of flight:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Wildlife: Animal Category:nk]' member='&quot;Birds&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Strikes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Airport: Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Phase of flight:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:When: Phase of flight:nk]' />
              <groupfilter function='member' level='[none:When: Phase of flight:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Exclusions (When: Phase of flight,Wildlife: Animal Category)]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Phase of flight:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Action (When: Time of day)]</column>
            <column>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' />
              <lod column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]</rows>
        <cols>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Phase of flight:nk]</cols>
      </table>
      <simple-id uuid='{81F67B13-3BC6-4EC2-87E1-1480FFE09276}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Effects Analysis'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
      </datasources>
      <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
        <column datatype='string' name='[Origin State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Origin State]' derivation='None' name='[none:Origin State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='86875' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='12125'>
            <zone h='86875' id='5' type-v2='layout-basic' w='82400' x='800' y='12125'>
              <zone h='86875' id='3' name='Total Damage Per State' w='82400' x='800' y='12125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='86875' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='12125'>
              <zone h='9375' id='8' mode='slider' name='Total Damage Per State' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='12125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Total Damage Per State' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='16000' x='83200' y='21500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='11125' id='10' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontsize='24'>Effects Dashboard</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='11125' id='10' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontsize='24'>Effects Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='Total Damage Per State' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='12125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86875' id='3' is-fixed='true' name='Total Damage Per State' w='82400' x='800' y='12125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Total Damage Per State' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='16000' x='83200' y='21500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6ECFAE4A-CC48-4D18-8C78-CE4504B5DDBD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Forecasting Strikes/Year'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='83250' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='15750'>
            <zone h='83250' id='11' param='horz' type-v2='layout-flow' w='82400' x='800' y='15750'>
              <zone h='83250' id='6' type-v2='layout-basic' w='82400' x='800' y='15750'>
                <zone h='83250' id='12' name='Predicting Total Strikes Per year' w='82400' x='800' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='83250' id='13' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='15750'>
              <zone h='8250' id='15' name='Predicting Total Strikes Per year' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='15750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='14750' id='16' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontsize='24'>Predicting The Number Of Strikes Over A Period Of Time </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='14750' id='16' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontsize='24'>Predicting The Number Of Strikes Over A Period Of Time </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83250' id='12' is-fixed='true' name='Predicting Total Strikes Per year' w='82400' x='800' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='15' name='Predicting Total Strikes Per year' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{42806209-93CA-4137-8A94-531B0C1477C7}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Map Of States'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
      </datasources>
      <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
        <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
        <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='80875' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='18125'>
            <zone h='80875' id='5' type-v2='layout-basic' w='82400' x='800' y='18125'>
              <zone h='80875' id='3' name='Map Of States With Most Strikes' show-title='false' w='82400' x='800' y='18125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='80875' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='18125'>
              <zone h='9375' id='8' mode='slider' name='Map Of States With Most Strikes' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type-v2='filter' w='16000' x='83200' y='18125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Map Of States With Most Strikes' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='16000' x='83200' y='27500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='17125' id='10' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontsize='24'>Map Showing Number Of Strikes Per State</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='17125' id='10' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontsize='24'>Map Showing Number Of Strikes Per State</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='8' mode='slider' name='Map Of States With Most Strikes' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type-v2='filter' w='16000' x='83200' y='18125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80875' id='3' is-fixed='true' name='Map Of States With Most Strikes' show-title='false' w='82400' x='800' y='18125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Map Of States With Most Strikes' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='16000' x='83200' y='27500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{713911CD-5D68-43A9-B875-8028685B1C40}' />
    </dashboard>
    <dashboard name='Project Story' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='text-align' id='story-description_9' value='center' />
          <format attr='wrap' id='story-description_9' value='on' />
          <format attr='text-orientation' id='story-description_9' value='0' />
          <format attr='background-color' id='story-description_9' value='#dfe7e8' />
          <format attr='background-color' id='story-description_10' value='#dfe7e8d9' />
          <format attr='background-color' id='story-description_11' value='#dfe7e8d9' />
          <format attr='border-width' id='story-description_11' value='1' />
          <format attr='border-style' id='story-description_11' value='solid' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='7' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4253' id='8' type-v2='title' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94087' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='5083'>
              <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5083' />
              <zone h='83610' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15560'>
                <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Cover Page' captured-sheet='' id='13' />
                    <story-point caption='Overview' captured-sheet='' id='9' />
                    <story-point caption='Wildlife Strikes By State' captured-sheet='Map Of States' id='14'>
                      <capturedDeltas>
                        <worksheet name='Map Of States With Most Strikes'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Latitude (generated)]' field-type='quantitative' max='10371199.115686728' min='-1114042.5886974116' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[Longitude (generated)]' field-type='quantitative' max='-3441843.1029963084' min='-18113429.543600701' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Strikes Analysis' captured-sheet='Strikes Analysis' id='2'>
                      <capturedDeltas>
                        <worksheet name='Airports With Most Wildlife Strikes'>
                          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]'>
                            <groupfilter function='level-members' level='[yr:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='Strikes By Time Of Day'>
                          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]'>
                            <groupfilter function='level-members' level='[yr:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='Wildlife Strikes By Year Per Animal'>
                          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]'>
                            <groupfilter function='level-members' level='[yr:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                        <worksheet name='Wildlife Strikes by Phase Of Flight'>
                          <filter class='categorical' column='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]'>
                            <groupfilter function='level-members' level='[yr:Collision Date and Time:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                          </filter>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Forecast For Strikes/Year' captured-sheet='Forecasting Strikes/Year' id='11' />
                    <story-point caption='Effects Analysis' captured-sheet='Effects Analysis' id='12' />
                    <story-point caption='Main Challenges' captured-sheet='' id='8' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='76763' id='9' story-point-id='8' type-v2='text' w='98819' x='886' y='15664'>
          <formatted-text>
            <run fontsize='20'>Main Challenge/Further Goals</run>
            <run>Æ&#10;&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='16'>My main challenge in this project has been time. If I had a bit more time I would add more viualizations/interactions, etc.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontsize='16'>In the future, I hope to add more visualizations and key story points to my project.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='77075' hidden='true' id='10' story-point-id='9' type-v2='text' w='99016' x='787' y='15871'>
          <formatted-text>
            <run fontsize='20'>Main Question</run>
            <run>Æ&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='16'>My main question of this analysis is exploring how we can reduce the amount of wildlife strikes in the United States.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run>Æ&#10;</run>
            <run fontsize='20'>Goals</run>
            <run>Æ&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='16'>My goal is to create visualizations that show causes for higher strikes so we can pinpoint these causes and find a solution to minimize collisions.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='80809' hidden='true' id='11' story-point-id='13' type-v2='text' w='99705' x='197' y='14627'>
          <formatted-text>
            <run bold='true' fontsize='36'>FFA WILDLIFE STRIKE ANALYSIS</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontsize='24'>For my project, I have chosen option 2: FAA Wildlife Strikes Dataset. This dataset shows different collision incidents with aircraft and animals in the United States</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{2ABD1397-AF91-4424-BEC2-D303E8E1073D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Strikes Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='FAA Wildlife Strikes (faa_data_subset)' name='federated.1yxs4rp0jfyou61djlwkl0mqjnir' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10' caption='Top Airports (Num of Strikes)' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <aliases>
            <alias key='10' value='Top 10' />
            <alias key='15' value='Top 15' />
            <alias key='20' value='Top 20' />
          </aliases>
          <members>
            <member alias='Top 10' value='10' />
            <member alias='Top 15' value='15' />
            <member alias='Top 20' value='20' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1yxs4rp0jfyou61djlwkl0mqjnir'>
        <column datatype='datetime' name='[Collision Date and Time]' role='dimension' type='ordinal' />
        <column-instance column='[Collision Date and Time]' derivation='Year' name='[yr:Collision Date and Time:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='91728' id='7' param='horz' type-v2='layout-flow' w='63857' x='667' y='7028'>
            <zone fixed-size='160' h='91728' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='63857' x='667' y='7028'>
              <zone h='8087' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='63857' x='667' y='7028'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42739' id='10' name='Airports With Most Wildlife Strikes' w='63857' x='667' y='15115'>
                <layout-cache fixed-size-h='319' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30793' id='12' name='Wildlife Strikes By Year Per Animal' w='63857' x='667' y='57854'>
                <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10109' id='13' name='Wildlife Strikes By Year Per Animal' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='63857' x='667' y='88647'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43444' id='11' mode='slider' name='Airports With Most Wildlife Strikes' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type-v2='filter' w='17406' x='81927' y='7028'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48284' id='14' name='Wildlife Strikes by Phase Of Flight' w='34809' x='64524' y='50472'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43444' id='15' name='Strikes By Time Of Day' w='17403' x='64524' y='7028'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5784' id='16' type-v2='text' w='98666' x='667' y='1244'>
            <formatted-text>
              <run fontsize='24'>Wildlife Strikes Dashboard</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97512' id='19' param='vert' type-v2='layout-flow' w='98666' x='667' y='1244'>
                <zone h='5784' id='16' type-v2='text' w='98666' x='667' y='1244'>
                  <formatted-text>
                    <run fontsize='24'>Wildlife Strikes Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8087' id='9' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='63857' x='667' y='7028'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43444' id='15' is-fixed='true' name='Strikes By Time Of Day' w='17403' x='64524' y='7028'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43444' id='11' mode='slider' name='Airports With Most Wildlife Strikes' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type-v2='filter' w='17406' x='81927' y='7028'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42739' id='10' is-fixed='true' name='Airports With Most Wildlife Strikes' w='63857' x='667' y='15115'>
                  <layout-cache fixed-size-h='319' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48284' id='14' is-fixed='true' name='Wildlife Strikes by Phase Of Flight' w='34809' x='64524' y='50472'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='238' h='30793' id='12' is-fixed='true' name='Wildlife Strikes By Year Per Animal' w='63857' x='667' y='57854'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10109' id='13' name='Wildlife Strikes By Year Per Animal' pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type-v2='color' w='63857' x='667' y='88647'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E9529091-DD43-4CB6-A52F-3DC2610B1984}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Airports With Most Wildlife Strikes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A354640-F330-4B53-8BC6-A3E2C439B302}' />
    </window>
    <window class='worksheet' name='Wildlife Strikes By Year Per Animal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[my:Collision Date and Time:ok]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[qr:Collision Date and Time:ok]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F084E323-0363-4017-A4A4-8D7E89C54BFF}' />
    </window>
    <window class='worksheet' name='Wildlife Strikes by Phase Of Flight'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Phase of flight:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFD172C6-A1A4-4CD8-923F-EAFC6D15852A}' />
    </window>
    <window class='worksheet' name='Map Of States With Most Strikes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State Code:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F4F6C23-7D5D-462B-A2E7-59E88A3BCDE9}' />
    </window>
    <window class='worksheet' name='Map - Clusters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State Code:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{814088F3-B313-48DD-B10A-C6CDFE3E24EB}' />
    </window>
    <window class='worksheet' name='Strikes By Time Of Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Aircraft: Type:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:When: Time of day:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Animal Category:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Wildlife: Species:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEB0A51E-B25A-4077-9A6F-AA3A3D659B85}' />
    </window>
    <window class='worksheet' name='Total Cost Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Aircraft: Type:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A22E15D5-B5B9-4DF1-BC77-ECFAD8522B4A}' />
    </window>
    <window class='worksheet' name='Predicting Total Strikes Per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Forecast Indicator:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[yr:Collision Date and Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FBF72BE-197E-42E8-A9CA-C9695B4144A9}' />
    </window>
    <window class='dashboard' name='Strikes Analysis'>
      <viewpoints>
        <viewpoint name='Airports With Most Wildlife Strikes' />
        <viewpoint name='Strikes By Time Of Day' />
        <viewpoint name='Wildlife Strikes By Year Per Animal'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wildlife Strikes by Phase Of Flight'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <device-preview visible='true' />
      <simple-id uuid='{0E961CD4-A0A3-4C0D-BC1F-9928ED1676DE}' />
    </window>
    <window class='dashboard' name='Forecasting Strikes/Year'>
      <viewpoints>
        <viewpoint name='Predicting Total Strikes Per year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6AC5C04D-E9DC-4C16-A3F2-EBF43F4802B0}' />
    </window>
    <window class='worksheet' name='Total Damage Per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[sum:Number of Strikes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Airport: Name:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Country:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Amount of damage (detailed):nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Impact to flight:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Effect: Indicated Damage:nk]</field>
            <field>[federated.1yxs4rp0jfyou61djlwkl0mqjnir].[none:Origin State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39035328-C627-4E39-8B69-89A98FF29BE4}' />
    </window>
    <window class='dashboard' name='Effects Analysis'>
      <viewpoints>
        <viewpoint name='Total Damage Per State' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{86D3291F-AC2E-4A6A-881F-F79A2F544129}' />
    </window>
    <window class='dashboard' name='Map Of States'>
      <viewpoints>
        <viewpoint name='Map Of States With Most Strikes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{9D03AC26-3483-49A0-AF06-F42DF5FDCB37}' />
    </window>
    <window class='dashboard' maximized='true' name='Project Story'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{A6D85F14-06CA-45C3-A642-06D5F2D5D33D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Airports With Most Wildlife Strikes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Effects Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecasting Strikes/Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map - Clusters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Of States' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map Of States With Most Strikes' width='192'>
      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
      g0EifjWbzUP9531Py7rZ36YRxeNQnI/Txzyr13ExTb7Pm4jS58VxjO/7yUyujk8TU3RdPzLx
      w5hxHrfXd14YarkvIjg1I/q+j2EYiSte0zRM06RUKhGGIcPhMLEiFYkktm3jui6dTocoinAc
      h9XVVba3t3MHV6TQFimdWYV8XsxjWVKysWmaueLUSTBY0f3Ni6L7zoqWeaurlHKCmKWUiQ5U
      xATHVWSfFuKHlB9ADUo5hJQSrF66Ivjsw1Nig67rhGFIEATJg1GzslKq4zimXq8fUhgVA6mH
      mSdDK+QRxzR5fh6LyLTzFJQlTN1fkUyv2p1GOEVjTxNoVn8qsrykdYl0mPm8k8C0Z9zr9RBC
      4Ps+lmUdGqvySOetakVWpjStPQ1IGEAIkczw6XAG5biZpbSoOJS0Gx8OHB5SSgaDQfLAYBzT
      7vs+a2tr3Lt3j/X19eS6dJyNenj9fp9KpZK0W0S0eR7pabpKNqwhfVz9r2laovcoM14e0sez
      IcHp9tJ9p69T5+Y5IdPnZI9l47FOSuRTk1xaUlDKrxJjj9rX02D9UTDSL6BSqRx68Iqwj4v0
      y6rVahPJGlKOnUNSSlqtFtvb2ywvLx96oDs7O0gpKZfL7OzssLS0NLPPvN/mXQ2mna+IsGhG
      Lpok8phgGmNkz+n3+9i2XUg8arxHVdyPCjWRBEGQG5LxcYMG48QAFYL7OE1TapUxTXNC1Irj
      GMuyqNfrbG9vT8ygyky7uLiI4zjJTFQUppHuK/192jVpglbiXNHsWyT/TyM4dY/KiZh3PG25
      Sq8+Uo4jP1XUZLvdpt/vs7OzQxAE7OzsMBqNePDgAVEUsbe3h+M42LaN4zhYlpXLNMe1QCnM
      Y/Ysei6PGql6ktBKpRKWZRWmKT5OqOQO27aJ4xjTNKlUKuzv7ydE67oui4uLyTWWZbG3tzdV
      lsyaP7Mm0TQjpP+fZWo9irv/KMiOM8sESqdQhoZ2u02tVqPdbuP7Pjs7O9TrdXq9XsIsKoy6
      XC5jWVbyZxjGofDjWUw8TbHO/pae1J6E9e1RYUxbVh83lGKtdIfhcIjjOEmmU7fbTXQPTdOw
      bRvDMBgMBrTb7cR0OksBy7NMZZkijwGOapVJW6FOEsr5aJom1WqVUqmEruu0Wi08z2N5eZmd
      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
      B2KJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Predicting Total Strikes Per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Project Story' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdyElEQVR4nO3d6XMb+Z3f8TeObgDdAAEQIAHwJkGAh46RPPJonJns4U3KzoNUdtdlO9nK
      UbWpslP5K/woFT9OpSp+kI1rU+XYazverd0k3rXX9sx4Z2yPNDp5ggRPECTu+2oAnQcgKVKi
      bsmS3b/XIwrd6N+vf/37sBtNfFsmXdd1BMGgzK+6A4LwKokACIYmAiAYmgiAYGjW+1/41p/9
      V8qaFavq50//9Rcwnfk2jZ///Drvvvv2Qzd869Yt3njjjd7a1Tz/48+/RUeHdz/3R6iNNAPR
      N3BJL2gvBOEZWb72ta997eQLH318k69+9askb/8Mk3ec7e1NfnntFkM+B9/+zl/QMCmMBAPk
      81kCfg9/9b2/YG2/RHRqjNu/eo+/+bv36bSq/Pc/+ybFlpkLcxE2bn1AQY3y7778L/C7TfyX
      //R17m4mCI5MsXn3I374048Yn5omvrxILrPL8so6xZaFgE/h+vU7DA0FX9HwCL/tHrgEKqe2
      +cY3vsGd/Q6D5jTf/qsf89nP/i7f/e4P+ON/+W+IffS3ZJu93/Af/J/vU1cG2b/9Htdu3uSD
      pRz/9k++wPnLb3P16lX+5I/+GQDTVz6Luxbn6//56yxvV3j33av8qz/9CkNSll/Gq3z5D/8p
      3/3u91m8/iEbuS7vvHuVX7z3Y/YWf0m2o/zaB0UwjgcugVyDY3zlK18BoL63wJW336XPIaNz
      9OcCnaO/HHQ6bbROm9nLb+GxmzGZTIAJE1CrVul0u1jMZnKpAy7/489z9a1dfvDebcasOuVy
      DY+uc2KzIKn83u+8hQmYHnTwnZ+t8B//wzsveQgEI3vgDPDmm28e/2x1DTA/FQLgS1/8Y/73
      t/8nkc98Hr+9S7cLv/fPv4RLy7KRzBMYn+edGQ9//q3v0ezofPpChL/84c8AkGWJn/zfH/A3
      7y3xxT/8A67+wef58K+/Rc46xNWwynf+8kd88UtfYP6NN44T+e7vXsUiu7GJj+nCS2R6lr8E
      /+Svv4116BK/8+bsy+gToPHN//YNPvflf0/I63hJbQjCMwZAEH5biAsMwdBEAARDEwEQDE0E
      QDC0478D5HK5l9KAw+GgXq+/lG0/D9Gvp/Pb2i9xBhAMTQRAMLTjABzs7ZLK5h+58vrqEgeZ
      R6/zKIVsmo31dWpa9+wVOhoNrfPM239WuVyOxNYm+Xyecr1BNpsFoFgsks0c0KgU2U5mj9dP
      bG+SyRWp1WoANBoNisXiGVtusLq8RjpXeKZ+ZVJJEsmD43botsmms7TPWLeQS5ErVE69Vsye
      XrfdbNB+yNA/Vb8OkiQPMk+07lHfU/sJ9lPZx6z9fDIHSXaTB6T390gmk5Qq9y6NOo0ajRNT
      q5jPkMmX7n0G0M1WAi4ri8trSKY2suqhlt8Dhw9Tq0Jk/hya1qZdK/Kzn9xiLBKmXq3TreVx
      +EaYHh9+bAcbWoeJiUGWluL0+fvI723g8PXTqljp98mYGxXSLZl8Js1UeIRSvkJ/v5fBwYEX
      O1L3abdaWCRI7OfxeRoAbK6vgqxi08sUMtA0WXlvbYnLV95GtsnUqyWSySpOu5mu2Y7d2qZU
      rbK7FmNgaJhCtcWVNybQWh1a1TIbxTyDQ2OoNssT98tus1EuVNmMr6O6+lAdJjLZNulyBapZ
      dIeH0v4eF66+QzqVoWuxk0/vItls7G5s4g1O0qdpmE0mUjtx3O4QKFCrwXxk4pnHS9M0TLJM
      bHkRu6VLyTpAfX8FpyeA5HTRyicxq15ye/t4Aj6GQqNomobVYWN1aQmJDpprkOjI4DP34WH9
      wmIjl8vR6uhUSgXuFhsMD7gwaRrtvkFyG4vMfuod0uk0GtK9ANgkM6lSC6fdQn9glHqljBoI
      oVscqI4BLMDYZBjJpKO1u3RaDcrVBlNDI1gcrifqoNvpYHMnT3R+nHyuQiA0gsVhxzHQh1Yv
      YPeMYqm3UG0SiiRjD/qx290vdJDO4vO4KLRcBKQadrsdAJPexmpXsVlsON0SZpsDh2xFtpqo
      d7vYVRf9ZjNer5dOp4PFYkHTWoyOj6G43NiUFiChqDKK00k5nXuqyQ/Q6XSRJBnXgB+z3Um/
      UwJzE6ukozllsNhwSWbM6ASHR9HRsVqs6J0mencCm6MPh9Sg3FYJDI0gSQoWmwW7/HxnWXe/
      H0VRQKtis9vx9Q1SkBo4VBelSgPVH8Ai21GsFlRXb254fYMoikKnUcVuU1H6/c/Vh7MoikK5
      2WF0Yqp3TOggq3WcNhNmi5V6G4ZGxrCYdAKhEeDEVyHEXaDXg+jX0xF3gV6AUiFLInnQO4Ue
      OvmzcNoD49VtU8yXePC8opPYTdCoVWh2Xs+vnD1QD2BEmqahA7GVZfx+H9v7eZxSF0VV2M/X
      eevy+VfdxdfKyfHy9PuQJSgVW+TrNbrlDE2LQqtcYnJyDLfXzfrWPl4FDsodFGqofR5qKETH
      Aq96V0QAAKwWK1qtgdfjptXu4napuBwW2l0TQ8En+3xjJCfHyyzb8XtkavUqkgW6iguX4qKo
      1chW20wO9zMyNECzViE4aKNRNmOhQ2Dw1U9+EJ8BXnU3HvDb1K9atYqiqi+pRz3iM4Dw2nrZ
      k/9FEAEQDE0EQDA0EQDB0EQABEMTARAM7fg26Mu69Wa1Wmm3z/r+4qsl+vV0flv79dyPRYnH
      46ysrLyWgyMIj/Pcl0DZbFZMfuE31nOfAWq12r2CDUH4DXP8XaBCoSC+ASkYznEA0vk8kkM8
      ilwwFnEbVDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQ
      DE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQDE0E
      QDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQDE0EQDA0
      EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQDE0EQDA0EQDB
      0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBEAARDEwEQDE0EQDA0EQDB0EQA
      BEMTARAMTQRAMDQRAMHQRAAEQxMBEI4lE4lX3YVfOxGAF+CH3/tfFBsdAGqZHX7wNz8+c731
      WOyh2+hqDe7cvMHa6irpbIEPP3j/kW0eLX/cek9Kq6TIlNpc/+jnrMdirMe3HvOOJjtbSQB2
      Fn7BTrb5VO3txFdZXV5hZWmBfKn22PVf1H7ez/pStmowXr+HtaUYb16eZXVtB69LBmB3Y41G
      q42jz8dwaABZloEmS7djSHYZya4yPjYMwM2PP2b20++gSL3fSbFuh831GLW6RvTcPKXUHrli
      Bd0sEZmefKAPuYME2UKZPl+QgEdmcWkD2SYhKy7GRkIkt+NUmx0wS0yHJ9jdWKNabzEyFUG1
      S6ysbBK59BaffLhFOBIBoFMrkKlbCPhc7GxtMTTgZr/YYmd1hbFokBvXYnTNXcxAam+H+kED
      /0gYr1NibWWVrkkiMhMhsb2FajORyDW5MB+hWdpnv6Tz6Uszx/1vN2usxzcxWWxEomGK6X3S
      +RK6yUo0MnW83t5WnFpDw+kdIDjY/9zHTpwBXgCLw0u3mQd0NMzIh6M6PBFmemaW7fVlAHa2
      t4AWB6kK09EoqcT28TYabf148gN0Oh1GJqfxynW2U1W8gyGmo1FamV1K2n0d0DWWVraIzMyy
      tngLOnVShSbT0SgHO5s0Cgl2c22mIxFSe9tUUhtkGzLR2Qg3P/4Y0Gl2TNgt0KyWWI/F2Nza
      pVMvcpCrHPe9Uy/yo7/7KdHLn2IoFMQ/GGJ8tBdgjz9AdG6a5Vt3WLr+K/zjEUYHZW7e3WBz
      5TYrm2nmZ6cBSO9uMzg8Tr1cYHXhNgfZMjeuXWdqZo4Rv8SthU3c/gCRaBRKCTL1e7sa39hm
      emaGwID3hRw7cQZ4QQacNjbjK7iC0+R2FkFv8Yv3f8HAUIhK9fTlgWyzAWAym45fM6HT1eHo
      JYskYzWbMJvM6N0ud679AntfP7lcgVD3vsY7NQr53sRVnW46gCzfa6NVraC67/22LOWyVCt2
      4utNvH4/peQafaEwADa17/gM0Mo+eBl0/srb9PepQPn0PskymAC6FCo1bIlNoIvXpdLIu/nM
      228er+vu9xLPZRmfGWaoP008V6Gtg2Q2IXl81JeWWfjkAEn1kMvlcLfvtTM3O83inTuYbSqz
      0SmelzgDvCDjszP8wwefEBn3917Qu2jtDug6XV1/7PvfuDDDtY+vs7a6QipbeGB5s9XCbDLR
      7d4/+wGrm+Ggi25Xx646sdy3uG9omnZ2k/VYjHK1SXBqFlOzhK7rqE4na9s5wqMPXk5YlT4K
      yU3isRj1Zue+pQq6lmdr+8EPzrMzYYqVOroOqtN5GIx7XMFpTKVtVpaX2Uqkcap2RoN+FhaW
      uHXtNtPn52m1WpjND+5voVBAtknUqtUzRvHpmXS9d3RiGxtIDuWFbFR4zbSbZMpN+uxmPv7k
      Lu+88/a9Zd0m164vcuXTl19d/14hcQlkBFYZUytLotDi7c9cPbWoUSkzOTP3ijr26okzgGBo
      4jOAYGgiAIKhiQAIhiYCIBiaCIBgaCIAgqGJAAiGJgIgGJoIgGBoIgCCoYkACIYmAiAYmgiA
      YGgvNACdZo1K7dHF0ZVy+czXq9UqnWaNhnZGwccTKBYeLCJ5WLvVUoFnaeZxbRxp1cq02o9f
      r1ou82x7+3T9OU0nubNJ6776lsf1pfqIApSTY/tsfXq0l7HNI6cC8Kv3fsjdpU0Afvz9bz51
      pf+TiK+tnfn69uYm9VyC9AMFr8/n6EkMD2v3RbcDkE+ska8/YuVD22sxniAnp9WyrO9mn/Zd
      ANy+cYPK/hpVs5de+XGZ2zdiT9SX7c3Nhy67f2y10j5bB6Vn6uNJj3qKxlkqyRjrybN/wT7M
      qYIYe98g3Uaedr0Pu2sQuk0+ub7C/FQ/20Ub0YkBPvj7v8XjVGjZfTQqRd6+cpH4VoJiqcqV
      mSA7OZnS9of4AyFqLRMXzs+wubpIq2thIDRCLp1k8VoN1/gbmKsHFLNpfOFLpzq1cONjrJIF
      58A08TsfEQj4MPWN08ptYnM6qdZNOMwNsEpY7V6mJobYSyRwOzr8+P0lPHaNyFu/j5Ma8bUY
      ssNJp1VjPRajUKoyaJfwnnPwyQfX8Q8PE54ah3KSH13fxu/oMHXxEh///c+YufwmpdQ2kl3F
      6nBTyR8wOz3GwlqSjtYkPB5gJ1XG7/OwEYthkmxMTYwBsLMRI1bK8I/eusT6xg75Yplw0E2i
      3GbA7ycU8EO3zUYsRrlYYXKon4NCjVarTcCrUKxraJpOp17A5fWRL1a5cuUyufQ+8Y0yfreD
      vUSCvfVVzG4vB9s7BAdc0DeBlts8Hr/hQN+psd1P7JFGYyzgRj559A/7UsgV+NTFWbZ2khTL
      NSZDXhK5Kvlcnl7ZTJeN1RjZTI7zb38Guxny6X2Wbn5M39AspXSCfrlJ/ECn33kOl2p/YM6c
      Dw+zlanQqtWJjvZxba3AxfkJduKbmOkwdfHT2Do14rEYDqebYi7dO7YfLGE3NwmMjlEsVgh4
      FeqaTls3Mz8XPbWftz75hPCQh49Wc0T8Eg7fAHt7WfRWnehUgJ2aE2dl68FLILfDwu3FLcKR
      cTDbkE0aazs5whMDveX9g0yOBfEMjuJS7GT299E6XYrFe6cph9NDODqLrvVOm+V6i+jsDF63
      Sv9AiOnJESq1CvvJNBba5IonT68d0ukcVpsK3SZu3yDR6CT1Sg3dLDMdmcLU6ZBOpbFYZCzm
      0/W2g0OjjAY9NFpgsSkEgiFGR0JYZIVwJIJkPjrRywwMeigXi8en/sDwGPPhIQ6yFQaGxhgd
      DtA1S0Tn5qkW0gBk9nbQJRuKLLGxl+XchXmGhoYYDAWPJz/A6GSEPtVGPrVPs9OhVCzQNxhE
      0jVKpcPfjmYrk5EIDpuFxF4Sm2TFKlnZ399HsliwSlbMko1wJIp8WOjb399PYHgct0u5t43p
      CB6vh2h0ikalfGr87tfv9zMyET49+U/2RbaS3t+n3dUpFYvsZQqcPz/PgK/3FAatkiNTaqBV
      C9QOT9begSBzF+copFK9f/f7CI5O4FLtZ86Z3YNcb5uKhUoHxqZn8Vqb5OqgqiqtpoasuAiE
      QgyFBu8d29AoPq+X8UgE2aJzcHCAxWLBan2wsNElm1k9qDPkkSlr0EilCF+8wNigg0zl3rnu
      VABUp4uxcJhGs4NTUbBJZmaiI+Qr+nGhtep0YpEdOGQLqtOJbOs9A0dVnWCRUexSrxD6cHsA
      oUEfqysr5EtVVKcTk2RDsduQbRJYe+9RFAWL7MAmSQyPhNB1E4qq9LZlllAVG3bZTHwtTluH
      4dERdF1HUVUAFEU5Xk9yOJEOO+x2OdjeTZ7qk01RsHQ1OroZs+lexfZBYptYoszUkBenq7dd
      l8PG6tICg8MTAAQmI1i0OpJDZS46zvLdRZIHaQb63axv9B5zctS+6nQh2WyYAEV10mq1sMq2
      4xrxPreLrdVVZKWP8NQk9aaGoqhMTEzQ0tooinI8hkf9R/VBeZ9iuYaiKChOF6ajsTZLqIpy
      avw24/ETx9eJZO8d1x4LqtPRG7/j7Zw4pk6VieEAiwtL1Bqt3oSxykgWEzaHytFmulqDxTvr
      TEQmUFQF2T1IK7tDudo4c85Mh8dYvLtIxezA63CgyBYs7hBBlwWsMg5bb0I7FZlEMnXq2J7c
      3/HxMbR2t7ccjtsAGJ8apV5vMx70oFkVRqLTbN29w37FzOhwgEZ2l2yx9viSyO3VBfqGI3hU
      +YFlv26JrTjVahVvcJKBfueL3Xgty3oOwiO+Mxe3amXWtvaYn5s5c7nwm0nUBAuG9tr9HeBF
      Pe9FEJ7EQwOws/WIh6M2syzFko9cJ51M0gFa5SwH2Se8NaW32d5KPLDdVjlLrvx0t2TrhRTF
      WpuTD3F9VgfJ53u/8Po69fF5PRYjHJkivraFxWoitRHDMRIhtRkjPDlKbH2bZrvL+eneHaFu
      t0unWWNze5dMrsTs9CiZbAGr4iaxdBNfpcrUkJdGW2drbYVmu4OrP0h+bwOb6gSLA0mv0+pA
      cHSS2sEmA+OTVFK7bK0s0jRLtFpt3BTZrChcPh9me32dLhbmp4N8vLDD+MQYnWqeUqnMSPQ8
      BxtL6BYFqgkyXT8Xz0Xo6g0OdjcoVprISh/tShaTZKPVMeFzShSqTXyBIXye3gdO9A7LdxZo
      62ZGx0PcvnmDS7KDSnaPtm5lPBI9fv6n8Jvt1GHU6jUyuxvYfSFq1RrNWhmtC9VKmUatQlPr
      kEzsHq9fq9Ww2BTM7TrTc+coF4vomNnb2cbrDzAZmUbqtqg1NErVOtHZeTJ727R1E+HIDNVi
      Fl3X0bTebalcVcOnStRqNWq1BhORCN1WA2+/j6GxSbqFXQotC91GnkK5gcnuJjjgoVQsY9Yq
      7O7tUG+rRKJhfP0+RibCqHaJWrVGKlskOjtLOZei1tQIR6Jo9Qqg09Y0Tj69sJHZJlXtYmqX
      aJhcBIIhBnxOKrUOkRkx+X+bnDqU4akQv1rYY8jbuzWm9rnYWl0mnS1QKxXpwAPPuazm9ojt
      5KgUcxSLJUAHdLxuldjSKtrh6ha9w+ryIo6+08+gtNsdWC1dkjtbmCT1zE7aXR7S22ug9GNp
      11DcA6g2M3a7HWhTKlXRdR0sTrrNDLFYHIfbS3JjhWqjd7NatVlZXV7GLJ/+oC/Z7MiyxEEy
      ydbGBgA2zyA2mticPvocVrRGhXS2gklvsLYSo5RPPfllnfBae23uAm0uLzA4PY9iNT1+5ZdC
      Z2M9zmQ4/IraF16F1yYA1WoVVT37DCAIL8trczUrJr/wKrw2ARCEV0EEQDA0EQDB0EQABEMT
      ARAMTQRAMLSnCkC9XOb+/yvwpFwqeVwE8WJ0qZRf7rdDTxZ7t2rVZyqWP1uXYuHJ6mKr1Spd
      rfFEY/ciC8Tv7fvLH+eHeZkF70/iVACWbnxC64yVjoqT99bWeHitd4PtnRxOxXbme5/G7Rs3
      Dn/SiK9tPvX7n6bNk8Xe+cQm5Rdbk//UfTibxnps4yW2+/Tj/CzH9cnUWI/tnrnkZbR55v8S
      +f6P/h/BgX4sgzOEg+pxwTe02YrFKGXyRMcDx0Xcly5doJBJkj5Isb3UwBw4T2V7gcDkOPG1
      GH39AyS341y8fI7bN9aolfbxBMZwSF2aDylqPpI92OPOL3P4Z65wsHobh2pD9Y2ztXgNfzCI
      1eGlWTrAarVg944xFnQd99dBi0Jdo9HQuHz5It1W/bhAfT4cYm03Rz6XJTJV4OZCHCp5psbO
      AfAPP/kR3j6FsqkPrVbm0tw4a3sFOvU6c9MD/PzWHpcuRtjb2MBi6jIy9yk8cou7K7uMeS0U
      5SDV1A7J7RYWu0JgeJzN1SUuXp7m9o19AoM2iqUcsnMEAHO3yu5ei35Hi9s3b3H1n3yOzNYm
      mWye6blx4rE1PH4fqb0E7WqBZKFOo95gakBmJWOiXcvzqblRlnbKhAJ+hocCNKsldhL7lKsN
      /LJG1tRHLZ/l4uzY8b7PnTsaaZ3b137F+MQYG4ks7VYTn2qib/w8e7G7nLt0mfTGKplGF79/
      kJ2NGGDBpZhJnejL3T2NyLCTbF3Cay5jC83gd3b56Q/fJxBw4xmdIRVfPj6O5ewejfQGO3Un
      jVKGC3NDxGNxvANO1u/exRsaYTo8QaWQPZ5L+5ur2BQFWfUxMRbi2ofv4/UPkNhL4zC3GZ+b
      J5VrPqT9OWLX32ckepFONXv2JZDHHyAaHqNarYNZOlHwbWU8EkG1W08Vcffe4ycQGjkuhAZw
      enyH36T0nNq+w+VldjZC+hFFzUd8gSEmx4LUKjksyiAz5y6Q39/B5fUxM3+eeilLJpXGIquY
      aZ3qb6ZQYW5uDqupd11zskA9kUgzf/E8wUE/+b1tRmcvMTocPG7X5fUxPTlCn3+IPqedZCLN
      7IVzDHmsFBowOhVhUNXJlDUUpxOt1cIkqZi7TfbyDUYHeiWbg8EAbU174BJjf28Pi9VMPpM/
      9bpNMjN5/gpyI0e+qtEsFJG9/QRCQ/i8vSc8JDMFzp2bw2010QBGJsK4nQoO9yCqpB9+KRFS
      +0k6Xf3wgQUmxsIRnIrt1L4fSW0uYfUMk99LYLbL2CWJkdl5dlbvYrbYMQPeQBBTp02pVKZ/
      IEQ4MkXqvr5MROcIjU3TrmQoNLr4ndLxcZy7OEtuN37qOB45eoiA29dPIDRCv8eDf9BHtVig
      rZ+cS06wKkTnzlPOHQAgO1yEo3N43C7GQl50e/Dh7e+n8QyECE+O0mzfdwl0qsDaIqM6enXA
      RwXfDmfvfyFXna5TRdw9vQJrly9IbneNcq2JCZCtkM4WsMtW4mub2BQFp6v3vfuTRc1rC7eo
      HxbrHxeAY0Z19orlHQ4vdnOZlbsLjIRnKOezrCzeITg+zfDIYYH8YV+O+js+EmRpaQmb0ps4
      JwvUJyZHWL6zQLlaxzc2zUHsNgf58nGht+p0HRbvS6hOFxPRSWJ3FshqNgZcNhSHDA4/wz4H
      utmKYu8NdLC/D5PDddiOQrvdRrL0CrVtVhPxtR3sTgc2mw1dN6M6HcdF34pDJrYWx6RVaXYs
      WC1gdzqxYEMyN8nmSyiqQnhihMWFJdo2BddhkbvqdKK1mlglCfPh9wltsgym3gMLbIoLydwb
      25P7fjTOk+ev4NTLeMcm0OuN3oMDzDaoFQhNTQPQarWQZBkTOiMhP8vL60zc1xf74QAO9yvo
      du/x3Moe7LF4d4Op+YunjqOiKqceIgAqFlOZXKFAt2vCbL43RXtzqYJqN7G6dJfgWPjUfFGd
      zuNtPbT96Pjx/Ov3OF+fL8Nl0mn8AwNPvH6veCfyEnsktGpl4jv7zM487Ti3Wbq1SPjCxcPa
      CY312C7hyORL6OXztf/aBEAQXgXxdwDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAw
      NBEAwdBEAARDEwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEA
      wdBEAARDEwEQDE0EQDA0EQDB0EQABEMTARAMTQRAMDQRAMHQRAAEQxMBEAxNBEAwNBEAwdBE
      AARDEwEQDE0EQDC0/w/g7sOH43IWHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Strikes Analysis' width='192'>
      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
      WcHr9fY9v/8yOdwLJDkYm5hlbmqMueOnmBgZOti53eyxtrZJoVyi06hQLNXYWlvFFBxI0oGh
      3GvV2NzZxx+KcvrsWaKRKGfOnMbjkBBFk3IuT6lUoqMfDKei7GAk7KTSNg6GSAEqhQypXLnv
      xCynx8/8sVOEfC7GJsaQZRcnZqcxkDhx/Biy04FsNFGcHnbTZbxOhXDQx36+hq52CAbc9CyZ
      kydmsXoa1WqNoaEo3cEq+ZHRdZ16vc7KygqqqmLbNiMjI7TbbVqt1tfdvXt4gW5+deDsvOMH
      TNu+bdDYto1t3YzxsaybMT43k6pE8fYxD8MXDV7rphdK7HOV1L7lrbg5DxTuSjqxsSybVrVI
      T/ISC/k+7wM3qxjckrEBwb4Zuy8eOqT++/de52p+/+j9xL7Zr/6H+Mcl14/sqdFJ/sdX//Ag
      Nuum7C3D1DRNZFl+4PmeEC/QN5tWq4XH6z2ynHVzo7Z+tPyb4AUS4Kbr/PFvBfXIXqBup4Ps
      cCLLEtbNaFBRFOi0O7g8XkzjQDMNXUMzbTxOB+1OB4/XiwBoahckB7J48BKVJOkg+AsbSxCx
      TZ2ebuJxO+m0O8gOF06HhGWDaZhIN/N2D9YTXDiUm121LAwbRNuk09Pw3mzvi1iWBbaNLRyk
      2H3VjtR31xfZqBePLPc438aPu01JEPnnr3yfoNvzSArwtXiBavkkyWqXkCjjmR6ntLODx+VC
      RKfZg/GJBFc+Ps/zv/cyayvrBMNRJLNNRwdkN3MjPm5sZhAsi2DQi26LHJsdZ2trH6fYoyf7
      UfQmmmHhdLipdHtMT0zgMlSSbZGta0vMzSVQXF42NzZJTE4wmZjA6ZTJZfYotEyG3TalnoXL
      HWZu8k6PUSqVQlRVuk6RiNuP7A3RbVaJDMWolYqEIwFqLQNLaxOJDeOQH205frdc4NPk+iOd
      43cNSRT57178Dpbl4sc//jFnzpxhbW2NY8eOsbu7y+TkJE8//fRDneuxeYFuTYFylSbjownU
      apGrn3yMIDqZHI7SMwzGEgk6xTSR8TH2t3dwBUKkdvYIxcNMJBKkMxkKeY3oSByzWsLhC6EV
      9vngg30UT5igR8LWGph6l0K9zcRYgmoxh9vlRgpIaKpALOonV6wxPRthaGgIGYtGo4GiiFSb
      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
    </thumbnail>
    <thumbnail height='164' name='Strikes By Time Of Day' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAY80lEQVR4nO2de1RU1/XHP8PADEgGcJShEV+/KK8FaM0yBRfGqKkVqampCoghiXGZxhpT
      q82yriYiQW1/xkd8RaNLXfKLLyC+ojXGZWJKYw2xPmogUdGC+OQ1Oow8ZmBmfn+QmYDyhpl7
      Z7iftbICcw737Jt8Z+9z9tn3HpnFYrEgISES3IQ2QEKiIZIgJUSFJEgJUSEJUkJUSIKUEBWS
      ICVEhSRICVEhCVJCVEiClBAVkiAlRIUkSAlRIQlSQlRIgpQQFZIgHUxCQgIymQyZTEavXr1I
      S0ujqqpKaLNEgyRIB9O3b19u3ryJxWLhu+++47///S9z586ltrZWaNNEgSRIAenTpw9btmzB
      aDTy73//W2hzRIHdBJmamkpwcDB37tyxfXbr1i0SEhKoqKho17XOnDnDmjVrutpEUaBUKomL
      iyMnJweAffv2ERgYiEwmw8fHhzVr1mA2mzl//jxvv/02ZrMZgPXr1/OLX/wCrVYLwBdffMGK
      FSsAmDt3Ln/4wx8IDAxELpczbtw47t+/L8wNthO7CdLHx4eYmBi2bdvWbJ+EhASysrI6PdaC
      BQu4detWp68jFB4eHjx48ACAYcOGcfbsWSwWC7dv3+aHH37g7t27DB48mLKyMkpLS6mtreXe
      vXvExMRw5coVALKzsxk+fDgADx8+xNfXl4sXL6LX6xk4cCCXL18W7P7ag11D9tSpUzl79iz5
      +flNtmdmZhIfH29PE5yC2tpa/Pz8gHox/eY3v8Hd3R0fHx8yMzMpKirCx8eHsLAwcnNzKSws
      RKFQMHHiRM6dO0dFRQXFxcX8/Oc/B0CtVvPGG2/g7+9Pjx49CAsLE/L22oVdBalWq0lKSmL7
      9u22UNOQWbNmcebMGQDMZjPp6eloNBpkMhkDBgxgzpw5tr55eXmMHTsWd3d3evbsyZEjR7h1
      6xb9+vXjgw8+oF+/fshkMlJTU+15S12OwWDg2LFjREVFodfrWbVqFRs3bsRoNGKxWBp9YYcP
      H052djYXL14kPDyciIgIvv/+e3744Qf8/Pzo1auXgHfSNdh9UTNp0iSKioq4evVqi/2ys7NJ
      T0/n9OnTWCwWtm3bhsFgsLUXFRWxePFiDAYD+/fv5/Dhw7YV6/z5820rV2cSZGlpKW+88QYK
      hYLhw4djMpnw8vKiT58+1NXV8eWXX3Lp0iVb/4iICAoLCzlz5gxRUVEEBASgVqs5fPgwI0aM
      EPBOug67C9Lb25ukpCQ+/PDDJr2klXPnzpGWlkZQUBAATzzxBDKZzNY+YcIExowZg1wuJzg4
      GB8fH3ubbhesXl0mkxEaGspTTz3Fxo0b8fDwwM/Pj3HjxhEREYFKpWLv3r3079/f9rcBAQF4
      enpy/fp1nnzySQAiIyPZu3cvw4YNE+qWuhR3RwwyduxYdu3axcWLF5vtYzKZkMvljjBHUDIz
      M1tsT0pKIikpqdn2LVu2NPo9MTGRxMTERp89mpFYsGBBO60UDofkIb29vZk1axabN29uNgEc
      EhLC2rVrefDgAUajkQsXLrQ5WXz//n2+++47zGYzNTU1XWm6hINxWGJ89OjRKJVK7t2712R7
      bGwsP/vZzwgICKB3794cP368zdeePHkyr776KgqFgo0bN3aVyRICIBPLmytu377Nw4cPGTx4
      MAA7duygsLCQ5cuXC2yZhCMRzdbhjRs3mDhxIgqFAqVSyaeffsrvf/97oc2ScDCi8ZASEiAi
      DykhAZIgJUSGJEgRYDQaycrKYsyYMbz00kuN2ioqKhgxYoStqFcmk5GQkADUb7f+5z//YcaM
      GURGRjp1gYkVSZAiYO3atfzjH/9g9erVBAQENGrT6/UMGjSIiooKLBYLFovFllw/e/Ys7777
      Lm+99Ra//OUvhTC9y3HITo1EyyxcuBCgSQ9XXl6OSqVCpVI91hYVFcWRI0cA2L17t32NdBB2
      85ClpaUsW7aMkJCQFmse7927x8svv0yPHj2QyWQEBgZy8OBBW/vBgwdthabDhw8nLy/P1paT
      k0NYWJhtf/vEiRP2uh3BKC0tZeDAgUKb4TDsIsiKigrefPNN+vbtS0pKSot9y8vLiYuL4969
      e5hMJo4dO8YHH3xAfn4+Fy9eZMeOHXz11VfU1tayatUqFi5ciFar5e7duyxZsoSdO3dSW1vL
      4cOHWblyZbO1l86KTqfjL3/5CzKZDKVSyfjx47lx44bQZtkNu4Rsa2Ep0GpFeHh4OOHh4bbf
      IyMjCQ0Npbq6mvz8fOLj420VQKNHjyYnJ4cLFy7Qo0cPnn32WaKiogAICwtj1qxZZGdn2/oL
      ga6yDICKyjJ0VWXIFP3wV/mhUfl26HqTJ0/GZDIBUF1dzc6dO1mwYAG7du3Cy8ury+wWC6Ka
      Q965c4f169fbqqO1Wi1//etfGTduHE8++SQVFRUYjUYKCgp47rnn+Pzzz5k0aRIRERFUV1dT
      XV3N9evX7WqjrrLMJrabJZd/+qyqzCbGhnzzILjR7xqVL/5P+DJY6cVzdXUA+AWF4xsU0erY
      Xl5evPTSS2RnZ6PVagkMDOyCOxIXohDkmTNniI2NxWg0kpKSwvz58/Hw8GDUqFGcP3+eiIgI
      tFotffr0ITQ0lGeffZagoCDmz5/P+PHjuXPnDmq1mqFDh9KvX78ut09XWcbN0svcLLlMbuHX
      nbpWiV5HiV6H7qGe//lv/fMwRYCnWsMDuScVBY2nHAsXLmTkyJHExsYCsHPnTsxmMxqNplN2
      iBW7bx1aQ3Zbnp2pqKjg6NGjfPrpp2zevJmePXs+1mf58uUEBwc3eb0DBw6Qm5vb6ry1LVhF
      mFvwNTdLO/6A1KMe0kp08R2ii+ufyFzy+becuna7UbvGx5tPN7yP35AoFi5J4/jx45hMJiZM
      mMDmzZvp27cvWVlZtpxkQ5z5WSVReEgrPj4+TJ8+nWvXrnHq1CkmT57cqL2yspJz584xYcKE
      x/7WbDZz4sSJJtvaiq6yjNzCr7lZcrlTImwLfR/qbT+/N/4XvDf+8T7Gb09S8u1J3h36JOvf
      +D8GxDUuxI2Pj8fVShEEF+Qnn3yCn58fMTExeHl5kZ+fz1dffcWoUaNsC5vQ0FDq6upITU3F
      z8+PyMhI6urqyM3NJSQkBIVCwaZNm7h+/Tpjxoxptw1WIf4r75Ad7rDz1GhLKDqWQdGxDPrH
      JT4mTFfCLmmfhs+NJCQk2N5nYw0vK1eutD1R2L9/f/72t7/h5+eHTCZj9OjRvPrqq4waNQqo
      L8dXqVT07NmTgoICVq9ejYeHB+7u7hw4cIBevXqhVCrZt28f27Zta9ezNrrKMk7nHWLr3992
      uBj7Vupb79QERccyOJsymxvHMrrYInHg8PKzyspKXn/9dVJSUggNDXXk0Das88N/5R1qcmXc
      lTQ1h/QxGpl5+VITvduHp1qDJnqMS3lMh4fs3Nxcxo4dK5gYraHZ3kJsCR+jofVObcAayku+
      OUX/uEQCots/XREb3aZAV1dZxmffbrP7YuVRmvKQDVfYXYlvUDhD5i3t8us6km5R7aOrLCPj
      q/91uBgdjS4/j7Mps9Hl5wptSodxeUHmFn7N1r+/LWiIfpSGKZ+upkZbwqV1KU4rSpcW5Om8
      Q3z2bfNvXxMKn9qumUO2xKV1KU65EndJQVrTOWLMK/oYjfgYjQ4Zq+hYBpfWLXbIWF2FywnS
      Ol8Uoxih61bYbcU6r6wpL3HouB3FpQRpFaOY5otioEZbwndOMq90GUE6ixg7ukPTWZxlseMS
      grTmGMUuRrDvCrstXP1Y3O8+cglB/ivvkMvnGLuKek8p3oWO0wvydN6hThfNOhKhQnZDdPl5
      ok0JtVmQ9jiBKisrq1OnMIi5ZKwpHJXuaQtFxzJEOZ9ssyDFdgKVdd7oTDg65dMaYlzkdChk
      C30ClXVF7WyIIVw/itgWOR2eQz56AlXDIz6g/iQvazg+ePCg7biPwMBA/vnPfz52vWvXrpGY
      mNimA36cZUX9KGLzkCC+RU6n6iEbnkDVHHq9nqysLE6dOkV4eDh37tzBza3x9+D06dOsWbOG
      devW0bdv3xav54jnXeyFmOaQDdHl56HLz23To7j2plOr7IYnUDWHSqUiLCyM2NhYXnnlFc6f
      P4+/v7+tPSEhgeTkZFauXNmqGK171M6KI4oqOopYQneHBdnwBKrWWLx4MdnZ2YwdO5YPP/yQ
      d955x9aWmZnJ0qVLWb58eaODkpriZqlze0exekioD93F35wS2oyOCfLRE6islJeXYzKZ+Pbb
      b/nkk0+A+td/nDp1Cl9fX2bMmMHixYuprKxsdL3p06czYMAAVqxY0ezhSrrKMqdK8TyKGOeP
      j3J11wahTWi7IFs6gQpg5syZ/O53v0OpVLJo0SLbgY/u7u588803BAUFIZPJmDVrFrNmzWps
      hJsbf/7zn7lx4wYff/xxk6K8WXrZKRcyzobQXtIpnqnRVZax9e9vC21Gh7A+U2Ov52jswbMb
      Dwg2tlNsHTrT1mBzCF1U0R6E3FYUvSCdfe7ojBQdyxCsoFf0gnQF7wji3KVpiSKBvKToBWl9
      B6MzI+Z0T3MU5wizuBG1IK2vPHF2nCHl0xRChG1RC1IK18Kiy89rvVMXI2pBukK4Buf1kEKU
      pnVIkIWFhUyaNAmlUolSqSQ5ORm9vt4L7N27l6CgIORyOUqlkqlTp3L//n0AqqqqmDdvHj16
      9MDd3Z0XXnih2dOnXCVcg3POIaF+HunosN1uQer1ehYtWsS0adPQ6/WUlZXRu3dvtm/fTl1d
      HQaDgUOHDmE0Gnnw4AHBwcGsWLECgK1btyKTySguLqaqqopx48bxpz/9qcki3woX2pURc1FF
      azg6bLdbkN7e3uzevZukpCQUCgUqlYqpU6diMplwd3dnxowZhIeHI5fL8fLyIi4uDuOPHuLK
      lSskJiaiUqlQKBS8/PLL+Pv7U11d/dg4zlzV0xCxF1W0hqPDdrsF6ebmhlwut/2u1+tJT09n
      5MiRjfoZjUa+/PJLli1bRnJyMgBxcXFs2bIFvV6P0Whk165d9O/f/7G33rpWuHZe7wiOT/90
      alFz7tw5EhMTmTt3bqMytISEBFuRxfvvv8/TTz8NwAsvvEBsbCwajQZvb2++//57/vjHPz52
      XVcK166AIwsuOiRIs9nMrl272LFjBxkZGQwdOrRRe2ZmJnV1dXz88cesW7eOPXv2ALBnzx4u
      XbpESUkJlZWVPP30003OIYtcxDuC86Z8GlKjddzCpkOC/OyzzygsLGT9+vVNnlIKIJfLCQkJ
      4b333uPIkSPcvXuXI0eOMGfOHNscMjExkeLiYoqLizt1E2LGmYoqmsPgwJV2uwVZXV3N0aNH
      mTlzZqO5JEBJSQkbNmzg5s2bmM1mjEYjBw4cwGw2o1ar6d27N+np6VRXV2MymTh58iRarZYe
      PXo0uk5OUQm3a9TcrlGjr3O98/wkmqfdgtRqtRw/fpzAwMDHTrl/4okn0Ol0REdHI5fLUalU
      fPHFF6xevRqlUklaWhpXr17Fz88PpVLJihUrWLduHWq1utEY+jov7tSouVOj5vLDQM4+GMyl
      igFcfhhIQZXGJlSDWfBjdlpFCtntQ5QFum/u3UCpXtfm/kq3WhRudajc69NHPu7Vtp+FJjq7
      QmgTOo2nWsMzaR85ZCxRupj2iBHAYPbAYPawhXdrXbbSrX6xpHKvRuFWh9KtFmUD4Uq0DUd6
      SNEJslTf8nPe7cFgrn/ex2D0eKxNzF5VjNSUl+DZy/4n0IpOkI5C8qriRHSCLGlnuO5q2utV
      FT8K1tUxaLuphyx92HUhu6tpzquC608BaspL8Q2y/ziiE6T/Ey2/msVeWAsgVEYDPrXWn38q
      jPAxGlDVOnehRGfw7OXfeqcuQHSC1Kh8u+xaksicD9EJ0l/VsoeURCYMSrX9548gQkEChN0v
      l0QmIjzVGocsaECkgpxYWe3QZKyEeBDlQ15KB02gJdqGI/9/iFKQng6ar0iID1EKUkJcOPJV
      z6IUpNJBE2gJ8SFKQUohW1z4BYU7bCxRCjIgeozQJkj8iKdaI4VsgIAoSZRiwNEZD9EKUgxn
      pkjAgLhEh44nWkFKYVt4HB2uQcSCBPB14GRa4nGE2KAQtSADosYKbUK3Rohpk7gFKYVtQXFk
      useKqAUJUk5SKISYP4ITCFKaRwqDRqDoJHpBBr/8ltAmdDs81RrB8sCiFyRAfwfnwro7vkHh
      DivIfRSnEKSjk7PdGU+1RtCo5BSCBAhOlkK3IxBq7mjFaQQZED1GWnHbGU+1RvBo5DSCBGku
      aW/E8N/XqQQZED1GSgPZCU+1RhQbEU4lSJC2E+1F8MtzhTYBcEZBSl6yyxFqV6YpnE6QUL/i
      lhY4XYOnWkPkvDShzbDhlIL07KURTYhxZupzjnMFS4I3hVMKEupLo4aI6JvtjGiix4gmVFtx
      WkFCvSjFkKpwRvrHJQqec2wKpxYk1G8rSouc9hEQNUaUYgQXECTAkHlLJVG2EaH3qlvDJQQJ
      0l53WxDbiropXEaQnr000iKnBcS4om4KUZ7k1Rlqyku4umsDuvw8oU0RDVbPKHYxggsK0sql
      dYslUVJfbDtk3lKhzWgzLitIgBvHMig6liG0GYIh1tROS7i0IAF0+blcWpcitBkOxVOtQRMt
      3tROS7i8IKF+Xnl2yWyhzXAIzjRfbIpuIUjoHosdZxcjuFDapzXq00JLGTIvzeUqhTzVGoKT
      3+KZtI86LMasrCxkMhkymQylUsmkSZMoLCzsWkPbQLcRpBXfoAieSfvIJfbAPdUa+scl8kza
      R11S7Z2ZmYnFYuHBgwfExcUxZcoUh4uy24Ts5nDGlbg9Fi1ZWVkAxMfH2z7bunUr9+7dIyXF
      cYvCbuchH2VAXCLPvOccHrOhR3TECvpXv/oV169fp7q6mmvXrjFixAjc3d1xd3dnypQp3L9/
      n9LSUl577TVKS0ttf3f48GHWrl3boTG7vSChfn7ZUJhim2NahRg5L82hqRx3d3eqq6upra3F
      z8+PHTt2YDAYMBgMPPfcc5w6dQp/f38iIiI4evQoALW1tZw4cYJf//rXHRuzK2/A2bEKc0Bc
      IjXlJRTnnEKXn+vwlbn1C6GJHoNfULhgRbR1dXV4eXnh4eGByWRixYoVZGZmUl1dfw74kiVL
      mDx5MklJSaSmppKQkMD169fx9vZm0KBBHRpTEmQzWMUJP4nT8OO/7TKeWoPvj+ITw+OoACdO
      nGDQoEF4eXmxYcMGhg4dytatW1EoFGRlZZGXV/9F7dOnD/7+/pw8eZKCggJiYmJwc+tY8JUE
      2QZ+Emf929h0+bk8+NFrGspLqNGWYCgvbfXAUKvnU/byb/CzRlAv2BRGo5H09HS2bNnC/v37
      gfpQHBISglwu59q1axw8eJDg4GDb38THx7Ns2TK8vb155ZVXOjy2JMgO4BsU0ayAasrrRWnQ
      llBTXornj+/pFpPgmiMhIQEAhUJBbGws+/fvZ+DAgQBMmzaNF198kcmTJzNs2DDGjx/f6G+H
      DBmCj48PYWFhqNXqDtvQ7dM+El1DWVkZc+bMYfny5QQFBXX4OtIqW6LTpKam8tRTT/Hb3/62
      U2IEyUNKiAzJQ0qICkmQEqJCEqSEqJAEKSEqJEFKiApJkN2YnJwc1Go1qamprfbNyMjA09PT
      VqYGcOvWLUaPHo1cLic4OJicnBxbW2FhIZMmTUKpVKJUKklOTkav17c6jiTIborBYGDDhg0k
      Jye32re0tJR9+/YxdepU22e1tbWkpKQwZcoUampqWLVqFe+88w5arRa9Xs+iRYuYNm0aer2e
      srIyevfuzfbt21sdSxJkN2Xfvn2EhIQQExPTYj+z2cxHH33Eiy++yODBg22fFxQUUFVVxcyZ
      M/Hw8GDixImEhIRw4cIFvL292b17N0lJSSgUClQqFVOnTsVkMrVqlyTIbsjdu3c5fvw4s2fP
      brUq59KlSxQUFDBt2rRGn5eXlxMSEoK3tzcAbm5uxMTEUFxcjJubG3K53NZXr9eTnp7OyJEj
      W7VNEmQ3w2w2s2nTJmbOnIm/f8sHtBsMBjZt2sTChQtRKpWPtVnFaMXDw4OrV682+uzcuXMk
      JiYyd+5coqKiWrVPqvbpZuTk5FBTU8Pzzz/fat+DBw8SGRlJaGjoY21KpZLKyspGn9XW1tpK
      0sxmM3v27OHMmTNkZGSgUqnaZqBFolsxffp0C/DYP9HR0RadTmfrV1FRYRk5cmSTfePj4y1X
      rlyxJCYmWh4+fGixWCwWk8lkmTNnjuXkyZMWi8ViOXr0qGXp0qWWurq6dtknCbKbk5mZaVmy
      ZEmb+i5ZssSSmZlpsVgsFqPRaHnttdcs69evtxiNRsvhw4ctzz//vKW8vNxSVVVlmT17tuX2
      7dvttkeaQ0o0YuXKlcyZM6fVfh4eHqSlpbF//348PT1ZtGgRq1evRq1Wo9VqOX78OIGBgbaX
      D8hkMlsBcEtI5WcSNiorK3n99ddJSUlpct7oCCQPKWEjNzeXsWPHCiZGkDykhMiQPKSEqJAE
      KSEqJEFKiApJkBKiQhKkhKj4fzkZuN9CZD7xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Cost Per Year' width='192'>
      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
      v7XiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Damage Per State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wildlife Strikes By Year Per Animal' width='192'>
      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
      3W4pAEl/8/8BWwb2gOriRSwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Wildlife Strikes by Phase Of Flight' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAN00lEQVR4nO3dyW+bd37H8fdDPhS1UgtFidqs1ZIsJ7HjmbGbNmhnpsCghwLFYA4tULRo
      D/M/zKn39tBzj3NqgaAtCvTUATJIUkyc2ok8SWwn1mptlLhTC3fyeXpQEsQZaWbIiLLI3+cF
      GDYFPfLXEj9+Fv4+fCzXdV1EDGRZluV52UOIvEwKgBhNARCj2S97gFbnVkt88nQNbyHD0Nws
      B1u7eDpHeWV+5Nxtfv3Bu0RSeWYmwwxM3Wao63f/PeV8hvcffM4f/ck9PnrvbWgfZG5uFH9X
      kG6/l1Jmj43jdhYn+onHU4RCgxf4r2xeCkCDWR6b3a1NujghlkrRPhji0S9/yeHhK3jzSQp2
      L5zsc+h0cu/mLP2jkyTSxyyOdPHuw49pX49z68Y8id2ndAcnSSYTzF0b5snn63zvzR+Q33/G
      k/U9gt0Wqwc2d44O+NWDJ0xPTtPbUwH7mI2VJwx0+flkL0diZoiHv3rAX/79TxkNdr/sb89L
      pwA0muUh1JYn0T3H1v33+MnfzJM5XCK9t8b65jZLd/6QQtnCJs/A0DC2B0rZDJHqFH+wkKM4
      OMfq42XiyRjt0RKVbIzk3hbltm5K5QobW3vMj3SymnRZXJylJ9DPwo2bdFLkOBUlko4zHg6z
      u/WcuaW7HO5/wszsDMFA+8v+zlwJli6DNl42Eyfv6aZ4lCAcDnF4UgGnTCmb5qTqpz/QgQW4
      lTKBwWGymRSB/gEKxykcXyflfJ5YIkp/X5BoPMnczBhrq1vMLCzgq+ZY2YoxPz1Kvuqlt6uN
      VOoQDy5eG7KZJG/9x3/z5p/9mJmJEZxSjnLuEDsQJhjoeNnfmpfKsiyroQFwXRfLshr15UW+
      FcuyrIYcAjmO89UvBUCushoD4LK19oxUrsrM2CDr2/tcn7/O2tMnjMwukNnbxNsT4vrUGB6P
      h0qlgm3rNEOurppfBxifmqG73cfm5hYe20cuEWFs6XUOt57iHZjCKZ40Yk6Rhqj5v+fVzz9j
      YGQKj1Oho6eNyP4RHZUI+HvIZeJYbrURc4o0RI0nwQ7RyB7ZMkyMhNg/SDA2Pkr8YJ/+oTC5
      TBxvRz+BLj+ADoHkSmv4VSAFQK4yrQYV4ykAYjQFQIymAIjRLuUMdS+d4P7m05q3G+zq5fsL
      txowkcipSwnATjrOWx++W/N2C8MTCoA0lA6BxGgKgBhNARCj1XwOUMxnyZUc+gI95LIndHR1
      cpQ5pCvQSyl3jNXWSaff98I2faUir8ejNQ837ldlTxqr5uXQqWSSaDxJ2/wc771zn3tvLLGz
      f4w/ekCuUMXj9XD71aUXthrM53lzP1LzcIGOQM3biNSixgBY+NtsgsNjrD39BNsH8Xia0Zkl
      0isPCAwt4ZxEXyjElMtlqk59K0Rd16VcLte1rcjvo8YAVNnd3qHqDzB/83X69vfpDwdZefwh
      I1MLZPbX8XYP4vF4XijEeD3euoazLAufz/e7P1GkTjUGwMtr37331aOu2VkAvnv39GNjQwMX
      NpjIZdBVIDGaAiBGUwDEaAqAGE0BEKMpAGI0BUCMpgCI0RQAMZoCIEZTAMRoCoAYreYAFHIn
      pA+PqZaLxBNJHNchk0pRrjpkjzLkClq+LM2j5kJMOpUimkgyPBwmdxQlmUhRqlZpi0XJFx0s
      j/UbhRiRq6rOQsw4fT02ufwAIV8JJzhHauUhPSrESJOpvRCzs0u1rYd8usxJ0SFwbZztxx8R
      nl4gE1nH2x1SIUaaRu2FmO/c/Y2PhoKnN10eC6kQI81FV4HEaAqAGE0BEKMpAGI0BUCMpgCI
      0RQAMZoCIEZTAMRoCoAYTQEQoykAYrQ6CjHHpDJHOJUSiVQG13VIJ5OUqw4nR2lyhVIj5hRp
      iNoLMekMsXiCA9uH7a2QTvWQL1Voi8dUiJGmU3shxuclODxO4STD5MQQny7vMHH7FqlnD+kZ
      ViFGmkvdhZjR/k4efbrD4mvzrD7+iJHpRdKRdeweFWKkeXyrQszw+CQA3/niDjGjof4LG0zk
      MugqkBhNARCjKQBiNAVAjKYAiNEUADGaAiBGUwDEaAqAGE0BEKMpAGI0BUCMVnMAysU8+WKZ
      SqlALH56h5hUMnFaiDlMk1UhRppIjatBIZPYJVPpxc0e4PU4pFMpSlUHXyxGvgSWBxVipGnU
      HIDQUJjsQRGP30csfUiP3yY8u6hCjDSlmiuRW5vP2U2WmQj34LFs+kZG2P6iEJOJrONVIUaa
      SM2VyMn5V5n84tHk9Onvw4NBQIUYaT66CiRGq/kcQMy0k47jOG7N2430DtBmX92n2dWdTK6U
      0ic/o1o6rHk7941/hu5rDZjoYigA8nsZ9BVxKda8nW05DZjm4ugcQIymAIjRFAAxmgIgRlMA
      xGgKgBhNARCjKQBitDoKMTlyhTKuUyEWjVKpOqQScUoVh+PDFNm8CjHSPOooxETIVAL4igk8
      XX0cJ/bYS+XxxePkyxYe64BbKsRIk6ijEDNM9qBILpclf3zCoWUTXnxNhZgW57q1L4QDqFSq
      OFf4Z1h7Ieb5c3YTZeanR9iNRBmenGT78TIjM4tk9lSIaVWWZVFPBGzbi/cK/wxrL8Rcf5XJ
      66ePhsLjp78HvyjEDKoQI81FV4HEaAqAGE0BEKMpAGI0BUCMpgCI0c4NQCmX4fHHy/zinf/j
      arc6Rep3bgAqpTwPHn4KTkkBkJZ1bgD8HQHGxkYZHQ3pOEla1rnP7WIuzaOHH/LoyWpdL4GL
      NINzl0J4/Z386Y9+yFFRT39pXWfuAaqVLO+/94B33/4fCthYlz2VyCU5cw/gtTuYvzlPoL8f
      u6f3smcSuTTnnANYdPptXF8X4VDwhT1A5PlnrO3Ewa3wzi/e5vgkyQf377Oxvcfywwd8/HT1
      UgYXuQjnnANYdHZ3sfrkf8mXK4RCA1+FYHRsnOcHRfa3t+gPDZHNZJh7/R7pzz+gd/wVFWJa
      lGGFGJetlc/oGZrgOJXA4ctdhcvWxjorkQLTowGikW26BxY5+OgDQuERks+f4u3qVSGmBZlV
      iHHB3xlgoLfM1OyrX/ski8mF20wunD66vnDa/Z2dnD39wOx0Q4cVuWhnngNUSsckczbZ+HM+
      evSpXgmWlnX2SbAFm0+X8YcXGeiob9cn0gzOPATy2B386M//Atvfjs9rUd8RvMjVd2YAnHKO
      //q3n5NxAty4eZMf/PFdhUBa0pmHQHZbgL/6279j4dogA4ODWgwnLeuccwCLYjaFt2eM6OYz
      6ruKL3L1nbsYrqM3TLAzTmDmju6kJy3rtzTC0jxd2SafzeoyqLSs8wsxXQNcn7mGz+fValBp
      WecGIJc54P37H7O6vkLlMicSuUTnBqCrb5TJYS+dfeNc3ZUcIt/OmQFwXZfj9B5u9xjp3XXt
      AaRlnRkAp5pjefkZtqdC/1D4hU8qFXLkCiWqpQL7B1GqjkMiFqNUcThKJznJFy9pdJFv78wA
      eO0u7r1xi+N0hnKl+sJaoMNkhEg0w9HRIaWTGCvP1oimjthY/YyN3Tjra+uXNLrIt3f+Jf6q
      A7aPvkD3C1eBvrxDjN/voeLtY9hfpBqcIvXsId3DN3BOYirEtCDDCjHgOGWKhRLF0teHd9l6
      vsVuskTx2CZXdOidnGD78TKjMzfIRDbw9gypENOCLqoQUyiX+PXOSs1fx2NZ3J2+WccEv925
      AWjrGuD61BjWCy8CWExef+WrO8R8afDu6R1iRgbvXPiA0losJ0VH4me1b+dpg+n/vPB5zr0M
      6rH9TM3OcpiMqQ8gLevs5dBOic3VVTa3dukfGtcrwdKyzt4DuC7FQoHo/g4bWxHtAaRlnfPO
      cMf8+7++Rd7qYFh3fpQWduYhkN0W5B/+6R8vexaRS3dmACxLR/1iBrUdxWgKgBhNARCjKQBi
      NAVAjKYAiNFqDkCpkCVbKOGUixzEkriuQyIW/aIQk+A4p0KMNI+a3/LnKHVAptyDVUhgWVVW
      M2nKLiSSCQoVLxYxbr261IhZRS5czQEYDA1xclCk4vFxbSLIp8u7TNy+pUJMi7uoQky1Uuf7
      DLo05LlQYwBOCzF7yRKzE0EePd5j6fYCK4+XGZm9QWZvE29PSIWYFnRRhRjHqfNtli0a8lyo
      MQAvFmLCY5MA3Ll7F4CR4OsXOZtIw+kqkBhNARCjKQBiNAVAjKYAiNEUADGaAiBGUwDEaAqA
      GE0BEKMpAGI0BUCMVncAKsUckf0YjusQjx5QqlQ5TMVViJGmUvc9sNfX1vC3wbNnGVyPl2Qq
      SaFqY7lxFWKkadQdgI72NuKZQ7p8FoNzN04LMUM3cLIqxLQiFWK+we9vw8ImOD7OzuNlRmaX
      yOxtqBDTolSI+Ybh8RmGx0//HFIhRpqUrgKJ0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIym
      AIjRFAAxWt1LIVrBSbFQ10K9jjY/bV6jv3Utw+if4r+8/XNWDjZq3u6n3/9rvjdzqwETyWWr
      OwButcz+QYxQeIR0PErv4BCFoxSe9gA9nf6LnLFhBuwjwm3Jmrdr96j00yrqDsDztRX8/UOc
      JHZJHFdIpT6n6Piw3DivqRAjTaLuAOTzOVInG/iwGblxeoeYzqEbuE1UiKm35OE4VeOKOirE
      fMP4xARrWxFGp6fZ/nohJjDUNIUYy7Lq2s7j8RpX1FEh5hsCwTB3gmEABlWIkSal1wHEaAqA
      GE0BEKMpAGI0BUCMpgCI0RQAMZoCIEZTAMRoCoAY7f8B3SMVrwl4a18AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
